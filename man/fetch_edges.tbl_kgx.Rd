% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_edges.tbl_kgx.R
\name{fetch_edges.tbl_kgx}
\alias{fetch_edges.tbl_kgx}
\title{Expand a graph by fetching connected edges from the KG.}
\usage{
\method{fetch_edges}{tbl_kgx}(g, ...)
}
\arguments{
\item{g}{A graph}

\item{direction}{The direction of associations to fetch. Can be "in", "out", or "both". Default is "both".}

\item{predicates}{A vector of relationship predicates (nodes in g are subjects in the KG), indicating which edges to consider in the neighborhood. If NULL (default), all edges are considered.}

\item{result_categories}{A vector of node categories, indicating which nodes in the larger KG (objects in the relationship) to consider as potential result nodes. If NULL (default), all object nodes in the larger KG are considered as potential nodes.}

\item{transitive}{NOT IMPLEMENTED If TRUE, include transitive closure of the neighborhood. Default is FALSE. Useful in combination with predicates like \code{biolink:subclass_of}.}

\item{drop_unused_query_nodes}{If TRUE, remove query nodes from the result, unless they are at the neighboorhood boundary, ie, required for connecting to the result nodes. Default is FALSE.}
}
\value{
A tbl_kgx graph
}
\description{
Expand a graph by fetching connected edges from the KG.
}
\examples{
e <- neo4j_engine()
g <- e \%>\% field_search("id", "MONDO:0007525")
phenos <- g \%>\%
  fetch_edges(predicates = "biolink:has_phenotype", result_categories = "biolink:PhenotypicFeature")

ancestors <- g \%>\%
 fetch_edges(predicates = "biolink:subclass_of", transitive = TRUE)

}
